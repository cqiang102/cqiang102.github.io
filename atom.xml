<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沐凉`Blog</title>
  
  <subtitle>没有感情没有钱</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.lacia.cn/"/>
  <updated>2021-03-11T11:09:16.767Z</updated>
  <id>https://blog.lacia.cn/</id>
  
  <author>
    <name>cqiang102</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter开发Linux程序中文乱码解决</title>
    <link href="https://blog.lacia.cn/2020/12/08/Flutter%E5%BC%80%E5%8F%91Linux%E7%A8%8B%E5%BA%8F%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
    <id>https://blog.lacia.cn/2020/12/08/Flutter%E5%BC%80%E5%8F%91Linux%E7%A8%8B%E5%BA%8F%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</id>
    <published>2020-12-08T13:44:00.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>盲猜由于字体缺失导致乱码，于是我把字体加过去</p></blockquote><h2 id="下载微软雅黑字体，也可以直接从-Windows-里复制一个"><a href="#下载微软雅黑字体，也可以直接从-Windows-里复制一个" class="headerlink" title="下载微软雅黑字体，也可以直接从 Windows 里复制一个"></a>下载<a href="https://blog.lacia.cn/other/msyh.ttc" title="从我服务器下">微软雅黑字体</a>，也可以直接从 Windows 里复制一个</h2><p><img src="https://blog.lacia.cn/image/flutter_font_config.png" alt="字体文件放在项目根目录 fonts 中对应 pubspec.yaml 配置" title="目录结构"></p><h2 id="pubspec-yaml-配置"><a href="#pubspec-yaml-配置" class="headerlink" title="pubspec.yaml 配置"></a>pubspec.yaml 配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">flutter:</span></span><br><span class="line">  <span class="attr">fonts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">family:</span> <span class="string">cn</span></span><br><span class="line">      <span class="attr">fonts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">asset:</span> <span class="string">fonts/msyh.ttc</span></span><br></pre></td></tr></table></figure><h2 id="main-dart-配置"><a href="#main-dart-配置" class="headerlink" title="main.dart 配置"></a>main.dart 配置</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">'Flutter Demo'</span>,</span><br><span class="line">      debugShowCheckedModeBanner: <span class="keyword">false</span>,</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        primarySwatch: Colors.blue,</span><br><span class="line">        <span class="comment">// 配置字体</span></span><br><span class="line">        fontFamily: <span class="string">'cn'</span></span><br><span class="line">      ),</span><br><span class="line">      home: HomePage(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Flutter linux 中文乱码（Ubuntu）
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Flutter" scheme="https://blog.lacia.cn/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装Nginx</title>
    <link href="https://blog.lacia.cn/2020/05/14/Docker%E5%AE%89%E8%A3%85Nginx/"/>
    <id>https://blog.lacia.cn/2020/05/14/Docker%E5%AE%89%E8%A3%85Nginx/</id>
    <published>2020-05-14T03:38:51.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">81</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/nginx.conf:/etc/nginx/nginx.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./wwwroot:/usr/share/nginx/wwwroot</span></span><br></pre></td></tr></table></figure><h4 id="docker-compose-yml-同级下新建-conf-、-wwwroot-文件夹-wwwroot-里新建-index-html-，写个-hello-当测试页面"><a href="#docker-compose-yml-同级下新建-conf-、-wwwroot-文件夹-wwwroot-里新建-index-html-，写个-hello-当测试页面" class="headerlink" title="docker-compose.yml 同级下新建 conf 、 wwwroot 文件夹 , wwwroot 里新建 index.html ，写个 hello 当测试页面"></a><code>docker-compose.yml</code> 同级下新建 conf 、 wwwroot 文件夹 , wwwroot 里新建 index.html ，写个 hello 当测试页面</h4><h3 id="conf-里创建-nginx-conf"><a href="#conf-里创建-nginx-conf" class="headerlink" title="conf 里创建 nginx.conf"></a>conf 里创建 nginx.conf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    </span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    # 配置虚拟主机 192.168.80.144</span><br><span class="line">    server &#123;</span><br><span class="line"># 监听的端口</span><br><span class="line">        listen       80;</span><br><span class="line"># 虚拟主机名称这里配置ip地址</span><br><span class="line">        server_name  192.168.80.144;</span><br><span class="line"># 所有的请求都以 &#x2F; 开始，所有的请求都可以匹配此 location</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">    # 使用 root 指令指定虚拟主机目录即网页存放目录</span><br><span class="line">    # 比如访问 http:&#x2F;&#x2F;ip&#x2F;index.html 将找到 &#x2F;usr&#x2F;local&#x2F;docker&#x2F;nginx&#x2F;wwwroot&#x2F;html80&#x2F;index.html</span><br><span class="line">    # 比如访问 http:&#x2F;&#x2F;ip&#x2F;item&#x2F;index.html 将找到 &#x2F;usr&#x2F;local&#x2F;docker&#x2F;nginx&#x2F;wwwroot&#x2F;html80&#x2F;item&#x2F;index.html</span><br><span class="line"></span><br><span class="line">            root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;wwwroot;</span><br><span class="line">    # 指定欢迎页面，按从左到右顺序查找</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行-docker-compose-up-d-浏览器输入-http-192-168-80-144-81"><a href="#运行-docker-compose-up-d-浏览器输入-http-192-168-80-144-81" class="headerlink" title="运行 docker-compose up -d 浏览器输入 http://192.168.80.144:81"></a>运行 <code>docker-compose up -d</code> 浏览器输入 <code>http://192.168.80.144:81</code></h3>]]></content>
    
    <summary type="html">
    
      Docker安装Nginx
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker" scheme="https://blog.lacia.cn/tags/Docker/"/>
    
      <category term="Nginx" scheme="https://blog.lacia.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>flutter loading 动画插件（flutter_spinkit 4.1.2）</title>
    <link href="https://blog.lacia.cn/2020/03/29/flutter%20loading%20%E5%8A%A8%E7%94%BB%E6%8F%92%E4%BB%B6%EF%BC%88flutter_spinkit%204.1.2%EF%BC%89/"/>
    <id>https://blog.lacia.cn/2020/03/29/flutter%20loading%20%E5%8A%A8%E7%94%BB%E6%8F%92%E4%BB%B6%EF%BC%88flutter_spinkit%204.1.2%EF%BC%89/</id>
    <published>2020-03-29T14:24:16.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="flutter-spinkit-4-1-2"><a href="#flutter-spinkit-4-1-2" class="headerlink" title="flutter_spinkit 4.1.2"></a><a href="https://github.com/jogboms/flutter_spinkit" target="_blank" rel="noopener">flutter_spinkit 4.1.2</a></h3><ul><li>pubspec.yaml 中添加依赖<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">flutter_spinkit:</span> <span class="string">"^4.1.2"</span></span><br></pre></td></tr></table></figure></li><li>阅读文档，看看案例。照着实现一个最简单的例子</li></ul><p><img src="https://note.youdao.com/yws/public/resource/ecee5d952864b60d9fb997e61e338e01/xmlnote/1B43F3151BE44158A6E0E106DF890604/3056" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">void main() &#x3D;&gt; runApp(App());</span><br><span class="line">class App extends StatelessWidget &#123;</span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return MaterialApp(</span><br><span class="line">      title: &#39;loading 动画&#39;,</span><br><span class="line">      debugShowCheckedModeBanner: false,</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        brightness: Brightness.dark,</span><br><span class="line">      ),</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        &#x2F;&#x2F; SafeArea 异形屏适配</span><br><span class="line">        body: SafeArea(</span><br><span class="line">        &#x2F;&#x2F; 层叠布局</span><br><span class="line">          child: Stack(</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Positioned.fill(</span><br><span class="line">                child: Container(</span><br><span class="line">                  decoration: BoxDecoration(color: Colors.white),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">              Positioned.fill(</span><br><span class="line">                child: Container(</span><br><span class="line">&#x2F;&#x2F;                  color: Colors.blueAccent,</span><br><span class="line">                  color: Colors.transparent,</span><br><span class="line">                  child: SpinKitFadingCircle(</span><br><span class="line">                    &#x2F;&#x2F; 可以画一个圈，分为 0 1 2 3 4 5 6 7 8 9 份</span><br><span class="line">                    itemBuilder: (_, int index) &#123;</span><br><span class="line">                      return DecoratedBox(</span><br><span class="line">                        decoration: BoxDecoration(</span><br><span class="line">                          &#x2F;&#x2F; isEven 表示是否整数</span><br><span class="line">                          color: index.isEven ? Colors.red : Colors.green,</span><br><span class="line">                        ),</span><br><span class="line">                        child: Text(&quot;$index&quot;),</span><br><span class="line">                      );</span><br><span class="line">                    &#125;,</span><br><span class="line">                    size: 120.0,</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              )</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>模拟一个简单的场景，点击登录出现 loading 动画，一段时间后取消</li></ul><p><img src="https://note.youdao.com/yws/public/resource/ecee5d952864b60d9fb997e61e338e01/xmlnote/FB15025133284553926676A1F11808D0/3054" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">void main() &#x3D;&gt; runApp(App());</span><br><span class="line">class App extends StatelessWidget &#123;</span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return MaterialApp(</span><br><span class="line">      title: &#39;loading 动画&#39;,</span><br><span class="line">      debugShowCheckedModeBanner: false,</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        brightness: Brightness.dark,</span><br><span class="line">      ),</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        &#x2F;&#x2F; SafeArea 异形屏适配</span><br><span class="line">        body: BodyWidget(),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">class BodyWidget extends StatefulWidget &#123;</span><br><span class="line">  @override</span><br><span class="line">  _BodyWidgetState createState() &#x3D;&gt; _BodyWidgetState();</span><br><span class="line">&#125;</span><br><span class="line">class _BodyWidgetState extends State&lt;BodyWidget&gt; &#123;</span><br><span class="line">  bool ifLoading &#x3D; false;</span><br><span class="line">  Timer timer;</span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return SafeArea(</span><br><span class="line">      child: Stack(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Positioned.fill(</span><br><span class="line">            child: Container(</span><br><span class="line">              decoration: BoxDecoration(color: Colors.white),</span><br><span class="line">              child: Column(</span><br><span class="line">                mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                children: &lt;Widget&gt;[</span><br><span class="line">                  RaisedButton(</span><br><span class="line">                    child: Text(&quot;登录&quot;),</span><br><span class="line">                    onPressed: () &#123;</span><br><span class="line">                      print(&quot;登录啊&quot;);</span><br><span class="line">                      setState(() &#123;</span><br><span class="line">                        ifLoading &#x3D; true;</span><br><span class="line">                      &#125;);</span><br><span class="line">                      &#x2F;&#x2F; 三秒后取消动画</span><br><span class="line">                      timer &#x3D; new Timer(Duration(seconds: 3), () &#123;</span><br><span class="line">                        setState(() &#123;</span><br><span class="line">                          ifLoading &#x3D; false;</span><br><span class="line">                        &#125;);</span><br><span class="line">                      &#125;);</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          ifLoading</span><br><span class="line">              ? Positioned.fill(</span><br><span class="line">                  child: Container(</span><br><span class="line">                    color: Colors.blueAccent,</span><br><span class="line">                    child: SpinKitFadingCircle(</span><br><span class="line">                      &#x2F;&#x2F; 可以画一个圈，分为 0 1 2 3 4 5 6 7 8 9 份</span><br><span class="line">                      itemBuilder: (_, int index) &#123;</span><br><span class="line">                        return DecoratedBox(</span><br><span class="line">                          decoration: BoxDecoration(</span><br><span class="line">                            &#x2F;&#x2F; isEven 表示是否整数</span><br><span class="line">                            color: index.isEven ? Colors.red : Colors.green,</span><br><span class="line">                          ),</span><br><span class="line">                          child: Text(&quot;$index&quot;),</span><br><span class="line">                        );</span><br><span class="line">                      &#125;,</span><br><span class="line">                      size: 80.0,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                )</span><br><span class="line">              : Container(),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>引入 provider 模拟更加真实的例子<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">flutter_spinkit:</span> <span class="string">"^4.1.2"</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">^4.0.4</span></span><br></pre></td></tr></table></figure></li><li>看到的效果是一样的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">void main() &#x3D;&gt; runApp(App());</span><br><span class="line">class App extends StatelessWidget &#123;</span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return MaterialApp(</span><br><span class="line">      title: &#39;loading 动画&#39;,</span><br><span class="line">      debugShowCheckedModeBanner: false,</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        brightness: Brightness.dark,</span><br><span class="line">      ),</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        &#x2F;&#x2F; SafeArea 异形屏适配</span><br><span class="line">        body: MultiProvider(</span><br><span class="line">          providers: [</span><br><span class="line">            ChangeNotifierProvider(</span><br><span class="line">              create: (_) &#x3D;&gt; LoginProvider(),</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">          child: Consumer&lt;LoginProvider&gt;(builder: (context,loginProvider,_)&#123;</span><br><span class="line">            return BodyWidget(ifLoading: loginProvider.ifLoading,onPressed: loginProvider.onPressed,);</span><br><span class="line">          &#125;,),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">class LoginProvider with ChangeNotifier &#123;</span><br><span class="line">  bool ifLoading &#x3D; false;</span><br><span class="line">  VoidCallback onPressed;</span><br><span class="line">  Timer timer;</span><br><span class="line">  LoginProvider() &#123;</span><br><span class="line">    onPressed &#x3D; () &#123;</span><br><span class="line">      ifLoading &#x3D; true;</span><br><span class="line">      &#x2F;&#x2F; notifyListeners 我的理解就是把它当做 setState 用</span><br><span class="line">      notifyListeners();</span><br><span class="line">      &#x2F;&#x2F; 模拟发送网络请求异步获得请求结果</span><br><span class="line">      timer &#x3D; new Timer(Duration(seconds: 3), () &#123;</span><br><span class="line">        ifLoading &#x3D; false;</span><br><span class="line">        notifyListeners();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">class BodyWidget extends StatelessWidget &#123;</span><br><span class="line">  bool ifLoading &#x3D; false;</span><br><span class="line">  VoidCallback onPressed;</span><br><span class="line"></span><br><span class="line">  BodyWidget(&#123;@required this.ifLoading, @required this.onPressed&#125;);</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return SafeArea(</span><br><span class="line">      child: Stack(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Container(</span><br><span class="line">            width: MediaQuery.of(context).size.width,</span><br><span class="line">            height: MediaQuery.of(context).size.height,</span><br><span class="line">            decoration: BoxDecoration(color: Colors.amberAccent),</span><br><span class="line">            child: Column(</span><br><span class="line">              mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">              children: &lt;Widget&gt;[</span><br><span class="line">                RaisedButton(</span><br><span class="line">                  child: Text(&quot;登录&quot;),</span><br><span class="line">                  onPressed: onPressed,</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          ifLoading</span><br><span class="line">              ? Positioned.fill(</span><br><span class="line">                  child: Container(</span><br><span class="line">                    color: Colors.blueAccent,</span><br><span class="line">                    child: SpinKitFadingCircle(</span><br><span class="line">                      &#x2F;&#x2F; 可以画一个圈，分为 0 1 2 3 4 5 6 7 8 9 份</span><br><span class="line">                      itemBuilder: (_, int index) &#123;</span><br><span class="line">                        return DecoratedBox(</span><br><span class="line">                          decoration: BoxDecoration(</span><br><span class="line">                            &#x2F;&#x2F; isEven 表示是否整数</span><br><span class="line">                            color: index.isEven ? Colors.red : Colors.green,</span><br><span class="line">                          ),</span><br><span class="line">                          child: Text(&quot;$index&quot;),</span><br><span class="line">                        );</span><br><span class="line">                      &#125;,</span><br><span class="line">                      size: 120.0,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                )</span><br><span class="line">              : Container(),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      flutter插件使用demo
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Flutter" scheme="https://blog.lacia.cn/tags/Flutter/"/>
    
      <category term="dart" scheme="https://blog.lacia.cn/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>大学总结 &amp; 2020 年 flag</title>
    <link href="https://blog.lacia.cn/2020/01/25/%E5%A4%A7%E5%AD%A6%E6%80%BB%E7%BB%93%20&amp;%202020%20%E5%B9%B4%20flag/"/>
    <id>https://blog.lacia.cn/2020/01/25/%E5%A4%A7%E5%AD%A6%E6%80%BB%E7%BB%93%20&amp;%202020%20%E5%B9%B4%20flag/</id>
    <published>2020-01-25T05:37:37.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大学总结"><a href="#大学总结" class="headerlink" title="大学总结"></a>大学总结</h1><h2 id="大一"><a href="#大一" class="headerlink" title="大一"></a>大一</h2><p>从高中就自学打下的 Java 基础，让我很快适应了大学的学习状态，学起来很轻松。混混社团<br><span style="color:gray;">(计算机技术协会)</span>，修修电脑，认识了一起学代码的小伙伴。第一学期就在玩乐懵懂中度过…… <span style="color:gray;">还和初恋分了个手-要坚强</span></p><p>下学期开学 ，我们的专业课老师找上了我和我说了明年的比赛，给我的一本 《Java 开发实战经典》 让我好好学，老师安排好假条，后来就很少上课<span style="color:gray;">(上课 == 浪费时间)</span>，正式踏上了学 Java 的征途 。<br>在此期间认识了前任，去了信阳，她也来了九江，还去了庐山<span style="color:gray;">(偷偷@soul app,虽然它现在好像变了，它依旧是个不错的树洞，现在我也不怎么上线了)</span>。<br>在这一年暑假，我就留在了学校学习 Java 和 Android 。</p><h2 id="大二"><a href="#大二" class="headerlink" title="大二"></a>大二</h2><p>大二，也正式开始撕备战比赛<span style="color:gray;">(职业技能大赛-物联网技术)</span>。每天都去实验室，不断的写重复的代码，接线，配环境。与此同时迎来社团的换届，顺利的当上了副会长，这也是大学中第一次担任的职位，虽然忙了些，不过我挺喜欢忙起来的感觉，不喜欢整天无所事事。空闲的时候就帮学弟学妹解决问题<span style="color:gray;">(<strong>我们学计算机的不是修电脑的</strong>)</span>，最后这个比赛只拿到三等奖，有学校设备原因也有自己原因……</p><p>下学期，开始陷入迷茫，社团里也没啥事，和前任也和平分手了，觉得生活没有了目标，学 Java 也陷入的困局不知道 Java 可以干嘛,于是接触了网安，前端(html,css,js)，python ，最后接触到撸帝的 Java 教程。打开了新世界的大门……</p><h2 id="大三"><a href="#大三" class="headerlink" title="大三"></a>大三</h2><p>寒假在家考完了科目一和科目二 …</p><p>从开学持续刷撸帝的视频，接触到 Spring Boot、Spring Cloud、Docker、git、Dubbo、k8s、微服务等。在这一个学期看完了撸帝的大部分视频<span style="color:gray;">(忍不住三连)</span>，跟着做了几个项目。学会了很多东西，技术进入飞速成长期，然后了解了微信小程序，跟着做了些爬虫搞了搞学校官网做了个小程序出来。也开始用 github。</p><p>暑假考完了驾照，下学期开始去了一个老师那里做外包项目，我是中途加入。在那个团队<span style="color:gray;">(两个前端，一个后端，没错，就只有三个人)</span>，看到挺多问题，前期没有好的设计，代码命名不规范，没有注释，没有文档，严重冗余，资金不足，我过去写了一个月前端还有一个登陆模块，然后交接一下我写的代码，最后退出了。<br>然后便在刷面试题，学习框架源码，准备校招，有几次面试经验</p><ul><li>第一家，只问了 Spring Boot 有什么常用注解，以及 MyBatis 中 <code>#{}</code> 和 <code>${}</code> 的区别，你做过的什么东西。就没有了……这都是什么问题。</li><li>第二家是去的南昌，办公室脏乱差，拿我简历看了看就说，你学的这个这个那个那个有什么用，我emmmm，礼貌微笑溜了</li><li>第三家，给了我一份笔试题<blockquote><p>题目一 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这两种有什么区别</span><br><span class="line">      for (int i &#x3D; 0; i &lt; array.length; i++) &#123;</span><br><span class="line">          ...</span><br><span class="line">      &#125;</span><br><span class="line">      for (int i &#x3D; 0,n &#x3D; array.length; i &lt; n; i++) &#123;</span><br><span class="line">          ...</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><blockquote><p>题目二 (应该就是临时手打的题目,有序组合？？？，哪种序也不说，是我菜了抱歉)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">找到1-33个数中的6位有序组合</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>第四家是在九江本地创业公司，没问技术谈理想，公司地点暂无，团队未定，只招一个后端一个 android 一个 ios ……</p></li><li><p>后面都是电话面试，有问基础，Spring，Spring Cloud,设计模式，后面问了 JVM  <span style="color:gray;">(我哪会，直接坦白了)</span>。一家回答的不怎么好的，由于招满了没有进去。回答的比较好的但是工作地点在上海，拒绝了。</p></li></ul><p>最后一圈下来，我还是没有找到工作 2333 在距离离校的最后一个月，我遇见了我的<span style="color:red;"><strong>现任 @丽丽 ❤</strong> </span> <span style="color:gray;">(这次的红娘还是 soul)</span> 。 与她度过了校园生活的最后一个月，也是体验了校园的爱情。<br>这三年，遇见了挺多人，也错过了挺多，但过去了就是过去了。 2020 继续加油 !!!</p><h1 id="2020-flag"><a href="#2020-flag" class="headerlink" title="2020 flag"></a>2020 flag</h1><h4 id="随机顺序"><a href="#随机顺序" class="headerlink" title="随机顺序"></a>随机顺序</h4><ul><li><input disabled="" type="checkbox"> 平安度过这次疫情<blockquote><p>这一届家长不好带，让他们戴好口罩就像他们喊我早睡一样难 。</p></blockquote></li><li><input checked="" disabled="" type="checkbox"> 有一份满意的工作 <blockquote><p>工资可以养活自己（存些钱），专业相关 , 最好距离对象近一些 。</p></blockquote></li><li><input disabled="" type="checkbox"> 和对象去旅游一次</li><li><input disabled="" type="checkbox"> 学习 Golang</li><li><input checked="" disabled="" type="checkbox"> 学习 Flutter</li><li><input disabled="" type="checkbox"> 学外语(英语&amp;日语)</li></ul>]]></content>
    
    <summary type="html">
    
      疫情恐怖，不敢出门，但是家里人不在乎，以及出去了......那我就做个总结和立 flag 吧
    
    </summary>
    
    
      <category term="日常" scheme="https://blog.lacia.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="日常" scheme="https://blog.lacia.cn/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>关于使用@CrossOrigin遇见的的一些问题和理解</title>
    <link href="https://blog.lacia.cn/2019/12/06/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8-CrossOrigin%E9%81%87%E8%A7%81%E7%9A%84%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%92%8C%E7%90%86%E8%A7%A3/"/>
    <id>https://blog.lacia.cn/2019/12/06/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8-CrossOrigin%E9%81%87%E8%A7%81%E7%9A%84%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%92%8C%E7%90%86%E8%A7%A3/</id>
    <published>2019-12-05T16:57:09.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="记录今天遇到的一个问题"><a href="#记录今天遇到的一个问题" class="headerlink" title="记录今天遇到的一个问题"></a>记录今天遇到的一个问题</h3><blockquote><p>个人理解 参考需谨慎。如果有错误，谢大佬指点</p></blockquote><p>是关于跨域的，在昨天写项目的时候遇到的跨域请求的问题，网上通常的配置方法都是使用 过滤器，或者 实现 <code>WebMvcConfigurer</code> 接口的方法。相对来说有些老了。不符合我想要的效果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">                .allowedMethods(<span class="string">"GET"</span>, <span class="string">"HEAD"</span>, <span class="string">"POST"</span>, <span class="string">"PUT"</span>, <span class="string">"DELETE"</span>, <span class="string">"OPTIONS"</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我在阅读 Spring 官网 看到有使用 <code>@CrossOrigin</code> 方式可以只需要加一个注解就行(简单粗暴我喜欢)。于是我便采用的这种方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span>(value = <span class="string">"*"</span>,allowCredentials = <span class="string">"true"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">login</span><span class="params">(@RequestBody User user)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"userName"</span>,user.getUserName());</span><br><span class="line">        map.put(<span class="string">"userPass"</span>,user.getUserPass());</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"logout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">logout</span><span class="params">(@RequestBody String token)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"token"</span>,token);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置之后问题就来了在访问 login 接口的时候可以正常访问，但是 请求 logout接口的时候，还是出现的跨域的问题。</p><p>在反复检查配置，阅读官网后。尝试了上面的方法配置，完全没问题 (那我代码应该没问题 2333),但是换回  <code>@CrossOrigin</code> 依旧请求失败。</p><p>由于那种配置方法比较死，不是很灵活 (我不喜欢)。所以我想继续使用 <code>@CrossOrigin</code> 的方式配置。</p><p>于是便把部分代码抽取出来，单独建一个干净的项目复现刚才的问题。</p><p>按照 Spring 官网的配置方法一路通畅。于是对比这个 demo 和我原先的 项目,便发现了原因 ！！！ </p><p>因为我配置了一个登录拦截器，用于验证 token 。拦截器不拦截 login 方法。拦截需要验证 token 的方法，所以就出现了部分有效，部分无效的问题。<br>所有经过了拦截器的方法都无法访问。</p><p>好，知道了问题的所在，让我继续翻文档。。。。</p><p>了解到。<code>@CrossOrigin</code>  这个注解本质也是一个拦截器,往response里添加  <code>Access-Control-Allow-Origin</code> 等响应头信息。<br>如果在 controller 类上或在方法上标了 <code>@CrossOrigin</code> 注解，则 spring 在记录 mapping 映射时会记录对应跨域请求映射。</p><p>当一个跨域请求过来时，spring    在获取 handler 时会判断这个请求是否是一个跨域请求，如果是，则会返回一个可以处理跨域的 handler</p><p>QAQ 这时候找到 <code>HandlerMapping</code> 里的 <code>getCorsHandlerExecutionChain</code>方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> HandlerExecutionChain <span class="title">getCorsHandlerExecutionChain</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HandlerExecutionChain chain, @Nullable CorsConfiguration config)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CorsUtils.isPreFlightRequest(request)) &#123;</span><br><span class="line">HandlerInterceptor[] interceptors = chain.getInterceptors();</span><br><span class="line">chain = <span class="keyword">new</span> HandlerExecutionChain(<span class="keyword">new</span> PreFlightHandler(config), interceptors);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 写死了 index 0 emmmm</span></span><br><span class="line">chain.addInterceptor(<span class="number">0</span>, <span class="keyword">new</span> CorsInterceptor(config));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> chain;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到 <code>CorsInterceptor</code>的 <code>preHandle</code>打上断电点，和自己的拦截器打上断点(自己的先执行，凉凉)</p><p>好像 Spring 也没给配置拦截器执行顺序的东东（菜鸡的我不知道）</p><p>到此可以知道，<code>@CrossOrigin</code> 是在 spring 映射 handler 的时候 干的活。那既然拦截器不行，那我就用 Spring AOP 吧 QWQ !!!<br>或者在拦截器中设置，只要是预请求（OPTIONS）全部直接放行</p>]]></content>
    
    <summary type="html">
    
      关于解决跨域遇到的一些问题
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Spring" scheme="https://blog.lacia.cn/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用指令、IntelliJ IDEA 常用快捷键</title>
    <link href="https://blog.lacia.cn/2019/11/17/Linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E3%80%81IntelliJ%20IDEA%20%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://blog.lacia.cn/2019/11/17/Linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E3%80%81IntelliJ%20IDEA%20%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2019-11-17T11:19:27.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-篇"><a href="#Linux-篇" class="headerlink" title="Linux 篇"></a>Linux 篇</h1><ul><li>查询占用此端口的程序 。<ul><li><code>lsof -i:{port}</code>  。 例：<code>lsof -i:3306</code> 。</li><li><code>netstat -tunlp|grep {port}</code> 。 例：<code>netstat -tunlp|grep 8080</code> 。</li></ul></li><li>查看端口使用情况 <code>netstat -anp</code> 。</li><li>查看本机资源使用情况 <code>top</code> 或安装（apt-get install htop）<code>htop</code>可实时变化 。</li><li>杀死进程 <code>kill {pid}</code>  。例：<code>kill 7821</code> 。</li><li>查进程 <code>ps aux | grep ***</code> 。</li><li>查日志 <code>tail -f catalina.out</code> 。</li><li>打 tar 包 <code>tar zcvf FileName.tar.gz DirName</code> 。</li><li>解压 tar 包 <code>tar zxvf FileName.tar.gz</code> 。</li><li>修改 hostname <code>hostnamectl set-hostname you-hostname</code></li><li>查看网关地址 <code>route -n</code></li><li>配置 hosts <code>sudo vim /etc/hosts</code></li><li>ubuntu18.04 取消 dhcp ,修改 ip 地址<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vi &#x2F;etc&#x2F;netplan&#x2F;50-cloud-init.yaml</span><br><span class="line"></span><br><span class="line">network:</span><br><span class="line">    ethernets:</span><br><span class="line">        ens33:</span><br><span class="line">          addresses: [192.168.80.160&#x2F;24]</span><br><span class="line">          gateway4: 192.168.80.2</span><br><span class="line">          nameservers:</span><br><span class="line">            addresses: [114.114.114.114,8.8.8.8]</span><br><span class="line">    version: 2</span><br><span class="line"></span><br><span class="line"># 使配置生效</span><br><span class="line">netplan apply</span><br></pre></td></tr></table></figure></li><li>查日志常用 <code>less</code> 的一些操作</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> `G`   到日志末尾</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> `?`   往上面查找</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> `/`   往下面查找</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> `n`   下一个匹配项</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> `N`   上一个匹配项</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> `j/k` 上一行/ 下一行</span></span><br></pre></td></tr></table></figure><ul><li><p>修改系统环境变量 <code>sudo vim /etc/proflie</code></p></li><li><p>root 账户下使用其他用户运行程序 <code>sudo -u username /usr/bin/appname</code></p></li><li><p>添加应用图标</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/share/applications</span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制一个原来的图标，对照修改</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 例：system-config-printer.desktop</span></span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Name=Printers # 名字</span><br><span class="line">GenericName=Printers</span><br><span class="line">X-GNOME-FullName=Printers</span><br><span class="line">Comment=Configure printers</span><br><span class="line">Exec=system-config-printer # 执行的程序</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Icon=printer # 图标</span><br><span class="line">StartupNotify=true</span><br><span class="line">NotShowIn=KDE;GNOME;</span><br><span class="line">X-Ubuntu-Gettext-Domain=system-config-printer</span><br><span class="line">Categories=GNOME;GTK;Settings;HardwareSettings;X-GNOME-Settings-Panel;X-Unity-Settings-Panel;System;Printing; # 分类</span><br><span class="line">X-GNOME-Settings-Panel=printing</span><br><span class="line">X-Unity-Settings-Panel=printing</span><br><span class="line">Keywords=Printer;Queue;Print;Paper;Ink;Toner;</span><br><span class="line">X-Desktop-File-Install-Version=0.24</span><br></pre></td></tr></table></figure></li><li><p>Maven,Flutter,Java 等系统环境变量配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_171</span><br><span class="line">export JRE_HOME=/usr/local/java/jdk1.8.0_171/jre</span><br><span class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin</span><br><span class="line"></span><br><span class="line">export M2_HOME=/usr/local/apache-maven-3.6.3</span><br><span class="line">export PATH=$&#123;M2_HOME&#125;/bin:$PATH</span><br><span class="line"></span><br><span class="line">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class="line">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line">export FLUTTER_HOME=/usr/local/flutter</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;FLUTTER_HOME&#125;/bin</span><br></pre></td></tr></table></figure></li></ul><ul><li>查看当前目录已经占用了多大空间，需要进入目录后输入命令 <code>du -sh</code></li></ul><h1 id="IntelliJ-IDEA-篇"><a href="#IntelliJ-IDEA-篇" class="headerlink" title="IntelliJ IDEA 篇"></a>IntelliJ IDEA 篇</h1><ul><li>万能快捷键 <code>Alt</code>+<code>Enter</code> 。</li><li>XML 或者 HTML 中选中一个节点 <code>Ctrl</code>+<code>W</code> 。</li><li>删除光标所在行 <code>Ctrl</code>+<code>Y</code> 。</li><li>双击 <code>Shift</code> 搜索 。</li><li>重命名 <code>Ctrl</code>+<code>Shift</code>+<code>R</code> 。</li><li>返回上次查看代码的位置, <code>Alt</code>+<code>←</code>、 <code>Alt</code>+<code>→</code> 。 </li><li>折叠/ 展开代码块的快捷键 。<ul><li><code>Ctrl</code> + <code>+/-</code> , 当前方法展开、折叠  。</li><li><code>Ctrl</code> + <code>Shift</code> + <code>+/-</code> , 全部展开、折叠 。</li></ul></li><li>IDEA 内切换窗口 <code>Ctrl</code> + <code>Alt</code> + <code>[/]</code> </li><li>关闭当前打开的文件选项卡 <code>Ctrl</code> + <code>F4</code></li><li>向下复制一行 <code>Ctrl</code> + <code>D</code></li></ul>]]></content>
    
    <summary type="html">
    
      Linux 常用指令、IntelliJ IDEA 常用快捷键,缓慢持续更新ing...
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Linux" scheme="https://blog.lacia.cn/tags/Linux/"/>
    
      <category term="IntelliJ IDEA" scheme="https://blog.lacia.cn/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>了解23种设计模式-单例模式</title>
    <link href="https://blog.lacia.cn/2019/11/05/%E4%BA%86%E8%A7%A323%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>https://blog.lacia.cn/2019/11/05/%E4%BA%86%E8%A7%A323%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2019-11-05T01:45:47.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<ul><li>饿汉式 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mgr01</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Mgr01 INSTANCE = <span class="keyword">new</span> Mgr01();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Mgr01</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Mgr01 <span class="title">getInstance</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> INSTANCE;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"m"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Mgr01 m1 = Mgr01.getInstance();</span><br><span class="line">        Mgr01 m2 = Mgr01.getInstance();</span><br><span class="line">        System.out.println(m1 == m2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>类加载到内存后就实例化一个单例 ， JVM 保证线程安全<br>缺点： 不管是否用到，类装载时就完成实例化 (通常问题不大，写法简单)</p></blockquote></li><li>懒汉式<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mgr02</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Mgr02 INSTANCE;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Mgr02</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 可以使用线程锁的方式（synchronized 修饰此方法）解决，但是性能会下降</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Mgr02 <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 或者在此处加锁,解决线程安全问题</span></span><br><span class="line">            <span class="keyword">synchronized</span> (Mgr02<span class="class">.<span class="keyword">class</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span> )&#123;</span><br><span class="line">                    INSTANCE = <span class="keyword">new</span> Mgr02();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"m"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="comment">// 同一个类的 不同对象，它的 hashCode 是不同的</span></span><br><span class="line">                System.out.println(Mgr02.getInstance().hashCode());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>为了保证线程安全，写法相对饿汉式麻烦，但是只有在使用时才会实例化</p></blockquote></li><li>静态内部类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mgr03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Mgr03</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Mgr03Holder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Mgr03 INSTANCE = <span class="keyword">new</span> Mgr03();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Mgr03 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Mgr03Holder.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="comment">// 同一个类的 不同对象，它的 hashCode 是不同的</span></span><br><span class="line">                System.out.println(Mgr03.getInstance().hashCode());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>与饿汉式类似，都是由 JVM 保证线程安全，但静态内部类是延迟加载</p></blockquote></li><li>枚举<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span>  Mgr04 &#123;</span><br><span class="line">    <span class="comment">//枚举单例</span></span><br><span class="line">    INSTANCE;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"m"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="comment">// 同一个类的 不同对象，它的 hashCode 是不同的</span></span><br><span class="line">                System.out.println(Mgr04.INSTANCE.hashCode());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>枚举单例，解决线程同步，解决反序列化(不能通过反射拿到多个实例，枚举没有构造方法)</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      单例模式的4种写法
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="https://blog.lacia.cn/tags/Java/"/>
    
      <category term="设计模式" scheme="https://blog.lacia.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 邮件服务提供者</title>
    <link href="https://blog.lacia.cn/2019/11/03/Spring%20Boot%20%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/"/>
    <id>https://blog.lacia.cn/2019/11/03/Spring%20Boot%20%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/</id>
    <published>2019-11-03T04:23:26.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="依赖-pom-xml"><a href="#依赖-pom-xml" class="headerlink" title="依赖 pom.xml"></a>依赖 pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>online.cccccc.test<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>email<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>email<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>cqiang<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>沐凉<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>cqiang102@foxmail.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>online.cccccc.test.email.EmailApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Spring-boot-配置文件"><a href="#Spring-boot-配置文件" class="headerlink" title="Spring boot 配置文件"></a>Spring boot 配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">provider-mail</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="comment"># 你的邮箱授权码</span></span><br><span class="line">    <span class="attr">password:</span> </span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">smtp:</span></span><br><span class="line">          <span class="attr">auth:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">starttls:</span></span><br><span class="line">            <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 发送邮件的邮箱地址</span></span><br><span class="line">    <span class="attr">username:</span> </span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span> <span class="comment"># 开发时关闭缓存,不然没法看到实时页面</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span> <span class="comment"># 用非严格的 HTML</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">servlet:</span></span><br><span class="line">      <span class="attr">content-type:</span> <span class="string">text/html</span></span><br><span class="line"><span class="comment"># 服务端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">82</span></span><br></pre></td></tr></table></figure><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><blockquote><p><code>@Async</code> 使用异步，需要在Spring boot 启动类添加 <code>@EnableAsync</code> </p></blockquote><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 你是电脑</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019/11/3 - 12:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> EmailService emailService;</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"email"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendEmail</span><span class="params">(@RequestBody EmailVo emailVo)</span></span>&#123;</span><br><span class="line">        emailService.receive(emailVo.getBody(),emailVo.getTo());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 你是电脑</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019/11/3 - 12:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ConfigurableApplicationContext applicationContext;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> TemplateEngine templateEngine;</span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(String body,String to)</span> </span>&#123;</span><br><span class="line">        Context context = <span class="keyword">new</span> Context();</span><br><span class="line">        <span class="comment">//往 模板中塞数据</span></span><br><span class="line">        context.setVariable(<span class="string">"test"</span>,body) ;</span><br><span class="line">        String emailTemplate = templateEngine.process(<span class="string">"index"</span>, context);</span><br><span class="line">        sendTemplateEmail(<span class="string">"支付宝到账100万元"</span>, emailTemplate, to);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送普通邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendEmail</span><span class="params">(String subject, String body, String to)</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setFrom(applicationContext.getEnvironment().getProperty(<span class="string">"spring.mail.username"</span>));</span><br><span class="line">        message.setTo(to);</span><br><span class="line">        message.setSubject(subject);</span><br><span class="line">        message.setText(body);</span><br><span class="line">        javaMailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送 HTML 模板邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTemplateEmail</span><span class="params">(String subject, String body, String to)</span> </span>&#123;</span><br><span class="line">        MimeMessage message = javaMailSender.createMimeMessage();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">            String property = applicationContext.getEnvironment().getProperty(<span class="string">"spring.mail.username"</span>);</span><br><span class="line">            <span class="keyword">assert</span> property != <span class="keyword">null</span>;</span><br><span class="line">            helper.setFrom(property);</span><br><span class="line">            helper.setTo(to);</span><br><span class="line">            helper.setSubject(subject);</span><br><span class="line">            helper.setText(body, <span class="keyword">true</span>);</span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模板文件"><a href="#模板文件" class="headerlink" title="模板文件"></a>模板文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-4.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>你有一封新邮件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试：<span class="tag">&lt;<span class="name">span</span>   <span class="attr">th:text</span>=<span class="string">"$&#123;test&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用-Postman-测试接口"><a href="#使用-Postman-测试接口" class="headerlink" title="使用 Postman 测试接口"></a>使用 Postman 测试接口</h2><p><img src="http://cccccc.online:8888/group1/M00/00/00/rBAES12-ZAyAWF8EAABuOh0Yb6Y548.PNG" alt="image"></p>]]></content>
    
    <summary type="html">
    
      使用 Spring boot 发送邮件
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Spring boot" scheme="https://blog.lacia.cn/tags/Spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>Docker 搭建redis单节点以及一主两从三哨兵模式</title>
    <link href="https://blog.lacia.cn/2019/10/24/Docker%20%E6%90%AD%E5%BB%BAredis%20%E5%8D%95%E8%8A%82%E7%82%B9%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%BB%E4%B8%A4%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/"/>
    <id>https://blog.lacia.cn/2019/10/24/Docker%20%E6%90%AD%E5%BB%BAredis%20%E5%8D%95%E8%8A%82%E7%82%B9%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%B8%BB%E4%B8%A4%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/</id>
    <published>2019-10-24T15:46:16.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="redis-单节点部署"><a href="#redis-单节点部署" class="headerlink" title="redis 单节点部署"></a>redis 单节点部署</h2><h4 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">my_redis</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--requirepass</span> <span class="string">your_password</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br></pre></td></tr></table></figure><h4 id="使用Spring-boot-连接配置application-yml"><a href="#使用Spring-boot-连接配置application-yml" class="headerlink" title="使用Spring boot 连接配置application.yml"></a>使用Spring boot 连接配置application.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">porject-name</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">200</span></span><br><span class="line">    <span class="attr">jedis:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="redis-集群部署-一主两从三哨兵"><a href="#redis-集群部署-一主两从三哨兵" class="headerlink" title="redis 集群部署 一主两从三哨兵"></a>redis 集群部署 一主两从三哨兵</h2><h3 id="一主两从-docker-compose-yml"><a href="#一主两从-docker-compose-yml" class="headerlink" title="一主两从 docker-compose.yml"></a>一主两从 docker-compose.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.7'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">master:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-master</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--port</span> <span class="number">6379</span> <span class="string">--requirepass</span> <span class="string">your_password</span>  <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">slave1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-slave-1</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--slaveof</span> <span class="string">redis-master</span> <span class="number">6379</span>  <span class="string">--requirepass</span> <span class="string">your_password</span> <span class="string">--masterauth</span> <span class="string">your_password</span>  <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6380</span><span class="string">:6379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="attr">slave2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-slave-2</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--slaveof</span> <span class="string">redis-master</span> <span class="number">6379</span>  <span class="string">--requirepass</span> <span class="string">your_password</span> <span class="string">--masterauth</span> <span class="string">your_password</span>  <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6381</span><span class="string">:6379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br></pre></td></tr></table></figure><h4 id="检查-redis-是否部署成功"><a href="#检查-redis-是否部署成功" class="headerlink" title="检查 redis 是否部署成功"></a>检查 redis 是否部署成功</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 使用此命令进入docker 容器</span><br><span class="line">docker exec -it redis-master bash</span><br><span class="line"># 使用redis 客户端连接redis</span><br><span class="line">redis-cli</span><br><span class="line"># 认证</span><br><span class="line">auth your_password</span><br><span class="line"># 添加一条数据</span><br><span class="line">set test1 test</span><br><span class="line"># 再取出来</span><br><span class="line">get test1</span><br><span class="line"></span><br><span class="line"># 操作全部没问题就可以退出 master</span><br><span class="line">exit</span><br><span class="line"># 在以同样的方式进入 从服务器 测试是否可以拿到刚添加的数据 且不能使用 set 添加数据，说明 一主两从搭建成功</span><br><span class="line">get test1</span><br></pre></td></tr></table></figure><hr><h3 id="三哨兵-docker-compose-yml"><a href="#三哨兵-docker-compose-yml" class="headerlink" title="三哨兵 docker-compose.yml"></a>三哨兵 docker-compose.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.7'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">sentinel1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-sentinel-1</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-sentinel</span> <span class="string">/usr/local/etc/redis/sentinel.conf</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26379</span><span class="string">:26379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel1.conf:/usr/local/etc/redis/sentinel.conf</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">sentinel2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-sentinel-2</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-sentinel</span> <span class="string">/usr/local/etc/redis/sentinel.conf</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26380</span><span class="string">:26379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel2.conf:/usr/local/etc/redis/sentinel.conf</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">sentinel3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-sentinel-3</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-sentinel</span> <span class="string">/usr/local/etc/redis/sentinel.conf</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26381</span><span class="string">:26379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel3.conf:/usr/local/etc/redis/sentinel.conf</span></span><br></pre></td></tr></table></figure><h4 id="三哨兵-配置文件-sentinel-conf"><a href="#三哨兵-配置文件-sentinel-conf" class="headerlink" title="三哨兵 配置文件 sentinel.conf"></a>三哨兵 配置文件 sentinel.conf</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">port 26379</span><br><span class="line">dir &#x2F;tmp</span><br><span class="line"># 自定义集群名，其中 192.168.8.188 为 redis-master 的 ip，6379 为 redis-master 的端口，2 为最小投票数（因为有 3 台 Sentinel 所以可以设置成 2）</span><br><span class="line">sentinel monitor mymaster 192.168.8.188 6379 2</span><br><span class="line">sentinel down-after-milliseconds mymaster 30000</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br><span class="line">sentinel auth-pass mymaster your_password</span><br><span class="line">sentinel failover-timeout mymaster 180000</span><br><span class="line">sentinel deny-scripts-reconfig yes</span><br><span class="line"></span><br><span class="line"># 复制三份</span><br><span class="line">cp sentinel.conf sentinel1.conf</span><br><span class="line">cp sentinel.conf sentinel2.conf</span><br><span class="line">cp sentinel.conf sentinel3.conf</span><br></pre></td></tr></table></figure><h4 id="检查是否可用"><a href="#检查是否可用" class="headerlink" title="检查是否可用"></a>检查是否可用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 进入sentinel</span><br><span class="line">docker exec -it redis-sentinel-1 bash</span><br><span class="line"># 连接 redis-sentinel</span><br><span class="line">redis-cli -p 26379</span><br><span class="line"># 查看从节点状态</span><br><span class="line">sentinel slaves mymaster</span><br><span class="line"></span><br><span class="line"># 查看到每个从节点都连接到主节点，就是正常的</span><br><span class="line">#   31) &quot;master-link-status&quot;</span><br><span class="line">#   32) &quot;ok&quot;</span><br><span class="line"></span><br><span class="line"># 可以尝试把主节点停止，可以观察sentinel日志，发现sentinel 会重新选举主节点</span><br><span class="line">docker-compose logs -f</span><br><span class="line">docker stop redis-master</span><br></pre></td></tr></table></figure><h4 id="使用Spring-boot-连接配置application-yml-1"><a href="#使用Spring-boot-连接配置application-yml-1" class="headerlink" title="使用Spring boot 连接配置application.yml"></a>使用Spring boot 连接配置application.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">porject-name</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">your_password</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">200</span></span><br><span class="line">    <span class="attr">jedis:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="comment"># 连接池中的最大空闲连接</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">        <span class="comment"># 连接池中的最小空闲连接</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">        <span class="comment"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">-1</span></span><br><span class="line">        <span class="comment"># 连接池最大连接数,默认8个，（使用负值表示没有限制）</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">master:</span> <span class="string">mymaster</span></span><br><span class="line">      <span class="attr">nodes:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:26379,127.0.0.1:26380,127.0.0.1:26381</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Docker 搭建 redis 集群 ，Spring boot 配置 redis
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="linux" scheme="https://blog.lacia.cn/tags/linux/"/>
    
      <category term="redis" scheme="https://blog.lacia.cn/tags/redis/"/>
    
      <category term="Docker" scheme="https://blog.lacia.cn/tags/Docker/"/>
    
      <category term="Spring boot" scheme="https://blog.lacia.cn/tags/Spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.lacia.cn/2019/10/17/hello-world/"/>
    <id>https://blog.lacia.cn/2019/10/17/hello-world/</id>
    <published>2019-10-16T16:00:00.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<p>郑重的写下Hello World</p>]]></content>
    
    <summary type="html">
    
      郑重的写下Hello World
    
    </summary>
    
    
      <category term="默认分类" scheme="https://blog.lacia.cn/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="hello" scheme="https://blog.lacia.cn/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Server 安装 Java、Tomcat、mysql</title>
    <link href="https://blog.lacia.cn/2019/06/27/UbuntuServerInstallJava-Tomcat-mysql/"/>
    <id>https://blog.lacia.cn/2019/06/27/UbuntuServerInstallJava-Tomcat-mysql/</id>
    <published>2019-06-27T09:11:26.000Z</published>
    <updated>2021-03-11T11:09:16.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h3><p>使用xftp把压缩包上传到Ubuntu 中，我这里使用的是JDK1.8 </p><blockquote><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p></blockquote><p>解压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u152-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;java</span><br></pre></td></tr></table></figure><p>移动解压好的安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv jdk1.8.0_152&#x2F; &#x2F;usr&#x2F;local&#x2F;java&#x2F;</span><br></pre></td></tr></table></figure><p>设置所有者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:root &#x2F;usr&#x2F;local&#x2F;java&#x2F;</span><br></pre></td></tr></table></figure><p>配置系统环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;environment</span><br><span class="line"></span><br><span class="line">在第二行加入</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_152</span><br><span class="line">export JRE_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_152&#x2F;jre</span><br><span class="line">export CLASSPATH&#x3D;$CLASSPATH:$JAVA_HOME&#x2F;lib:$JAVA_HOME&#x2F;jre&#x2F;lib</span><br></pre></td></tr></table></figure><p>配置用户环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">修改为如下</span><br><span class="line"></span><br><span class="line">if [ &quot;$PS1&quot; ]; then</span><br><span class="line">  if [ &quot;$BASH&quot; ] &amp;&amp; [ &quot;$BASH&quot; !&#x3D; &quot;&#x2F;bin&#x2F;sh&quot; ]; then</span><br><span class="line">    # The file bash.bashrc already sets the default PS1.</span><br><span class="line">    # PS1&#x3D;&#39;\h:\w\$ &#39;</span><br><span class="line">    if [ -f &#x2F;etc&#x2F;bash.bashrc ]; then</span><br><span class="line">      . &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">    fi</span><br><span class="line">  else</span><br><span class="line">    if [ &quot;&#96;id -u&#96;&quot; -eq 0 ]; then</span><br><span class="line">      PS1&#x3D;&#39;# &#39;</span><br><span class="line">    else</span><br><span class="line">      PS1&#x3D;&#39;$ &#39;</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line">#加入的语句</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_152</span><br><span class="line">export JRE_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_152&#x2F;jre</span><br><span class="line">export CLASSPATH&#x3D;$CLASSPATH:$JAVA_HOME&#x2F;lib:$JAVA_HOME&#x2F;jre&#x2F;lib</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$JAVA_HOME&#x2F;jre&#x2F;bin:$PATH:$HOME&#x2F;bin</span><br><span class="line">#加入的语句</span><br><span class="line"></span><br><span class="line">if [ -d &#x2F;etc&#x2F;profile.d ]; then</span><br><span class="line">  for i in &#x2F;etc&#x2F;profile.d&#x2F;*.sh; do</span><br><span class="line">    if [ -r $i ]; then</span><br><span class="line">      . $i</span><br><span class="line">    fi</span><br><span class="line">  done</span><br><span class="line">  unset i</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>使环境变量生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>测试安装是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h3><p>我这里安装的是Tomcat 8.5.23</p><blockquote><p><a href="https://tomcat.apache.org/" target="_blank" rel="noopener">https://tomcat.apache.org/</a></p></blockquote><p>解压缩上传的压缩文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-8.5.23.tar.gz</span><br></pre></td></tr></table></figure><p>改成简短的文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-tomcat-8.5.23 tomcat</span><br></pre></td></tr></table></figure><p>移动目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv tomcat&#x2F; &#x2F;usr&#x2F;local&#x2F;</span><br></pre></td></tr></table></figure><p>启动<br>执行tomcat/bin/目录下的<code>startup.sh</code></p><h3 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h3><p>更新数据源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mysql-server</span><br><span class="line"></span><br><span class="line">#安装途中需要设置root密码</span><br></pre></td></tr></table></figure><p>如遇到如下问题,则执行划线部分代码</p><blockquote><p>E: dpkg was interrupted, you must manually run ‘++dpkg –configure -a++’ to correct the problem</p></blockquote><p>配置允许远程连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d&#x2F;mysqld.cnf</span><br><span class="line"></span><br><span class="line">#注释掉如下行（前面加上#号）</span><br><span class="line">bind-address &#x3D; 127.0.0.1</span><br></pre></td></tr></table></figure><p>重启Mysql服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>授权 root 用户允许所有人连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;你的 mysql root 账户密码&#39;;</span><br></pre></td></tr></table></figure><p>如果出现如下情况，是由于密码安全级别太低</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</span><br><span class="line"></span><br><span class="line">使用如下设置即可</span><br><span class="line"></span><br><span class="line">set global validate_password_policy&#x3D;0;  &#x2F;&#x2F;设置密码安全级别</span><br><span class="line">set global validate_password_length&#x3D;1;  &#x2F;&#x2F;设置密码长度限制</span><br></pre></td></tr></table></figure><p>重启Mysql服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      记录一下 Ubuntu Server 安装 Java、Tomcat、mysql
    
    </summary>
    
    
      <category term="笔记" scheme="https://blog.lacia.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="linux" scheme="https://blog.lacia.cn/tags/linux/"/>
    
  </entry>
  
</feed>
